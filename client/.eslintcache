[{"E:\\Programming\\portf_app\\client\\src\\index.js":"1","E:\\Programming\\portf_app\\client\\src\\App.js":"2","E:\\Programming\\portf_app\\client\\src\\components\\Form\\Form.js":"3","E:\\Programming\\portf_app\\client\\src\\components\\Posts\\Posts.js":"4","E:\\Programming\\portf_app\\client\\src\\components\\Posts\\Post\\Post.js":"5","E:\\Programming\\portf_app\\client\\src\\styles.js":"6","E:\\Programming\\portf_app\\client\\src\\components\\Posts\\Post\\styles.js":"7","E:\\Programming\\portf_app\\client\\src\\components\\Posts\\styles.js":"8","E:\\Programming\\portf_app\\client\\src\\components\\Form\\styles.js":"9","E:\\Programming\\portf_app\\client\\src\\reducers\\index.js":"10","E:\\Programming\\portf_app\\client\\src\\reducers\\posts.js":"11","E:\\Programming\\portf_app\\client\\src\\actions\\posts.js":"12","E:\\Programming\\portf_app\\client\\src\\api\\index.js":"13","E:\\Programming\\portf_app\\client\\src\\components\\Navbar\\Navbar.js":"14","E:\\Programming\\portf_app\\client\\src\\components\\Navbar\\styles.js":"15","E:\\Programming\\portf_app\\client\\src\\components\\Home\\Home.js":"16","E:\\Programming\\portf_app\\client\\src\\components\\Auth\\Auth.js":"17"},{"size":521,"mtime":1612438431438,"results":"18","hashOfConfig":"19"},{"size":751,"mtime":1613394650458,"results":"20","hashOfConfig":"19"},{"size":3108,"mtime":1612950644099,"results":"21","hashOfConfig":"19"},{"size":835,"mtime":1612871056695,"results":"22","hashOfConfig":"19"},{"size":2383,"mtime":1613035661534,"results":"23","hashOfConfig":"19"},{"size":417,"mtime":1612175170885,"results":"24","hashOfConfig":"19"},{"size":1173,"mtime":1612176210822,"results":"25","hashOfConfig":"19"},{"size":301,"mtime":1612175958422,"results":"26","hashOfConfig":"19"},{"size":502,"mtime":1612175843427,"results":"27","hashOfConfig":"19"},{"size":117,"mtime":1612179380577,"results":"28","hashOfConfig":"19"},{"size":1210,"mtime":1613035345454,"results":"29","hashOfConfig":"19"},{"size":2154,"mtime":1613035189853,"results":"30","hashOfConfig":"19"},{"size":393,"mtime":1614261269280,"results":"31","hashOfConfig":"19"},{"size":1715,"mtime":1614264646542,"results":"32","hashOfConfig":"19"},{"size":1079,"mtime":1613384376811,"results":"33","hashOfConfig":"19"},{"size":1326,"mtime":1614100266840,"results":"34","hashOfConfig":"19"},{"size":145,"mtime":1613394178780,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"sra5bv",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"E:\\Programming\\portf_app\\client\\src\\index.js",[],["74","75"],"E:\\Programming\\portf_app\\client\\src\\App.js",[],"E:\\Programming\\portf_app\\client\\src\\components\\Form\\Form.js",["76"],"import React, {useState, useEffect} from 'react'\r\nimport {TextField, Button, Typography, Paper} from '@material-ui/core'\r\nimport FileBase from 'react-file-base64'\r\nimport useStyles from './styles'\r\nimport {createPost, updatePost} from '../../actions/posts'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n//./===current folder\r\n//../===parent folder\r\n\r\nconst Form = ({currentId, setCurrentId}) => {\r\n    const classes = useStyles()\r\n    const [postData, setPostData] = useState({\r\n        creator: '', \r\n        title: '', \r\n        message: '', \r\n        tags: '', \r\n        selectedFile: ''\r\n    })\r\n    const posts = useSelector(state => state.posts)\r\n    const post = posts.find(post => post._id === currentId)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // if(currentId) {\r\n    //     console.log('Form rendered')\r\n    // }\r\n    useEffect(() => {\r\n        if(currentId) {\r\n            setPostData(post)\r\n        }\r\n    }, [currentId])\r\n\r\n    //update state, data input is from a form, async function\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(currentId) {\r\n            dispatch(updatePost(currentId, postData))\r\n        } else {\r\n            dispatch(createPost(postData))\r\n        }\r\n        clear()\r\n    }\r\n\r\n    const clear = () => {\r\n        setPostData({\r\n            creator: '',\r\n            title: '',\r\n            message: '',\r\n            tags: '',\r\n            selectedFile: ''\r\n        })\r\n        setCurrentId(null)\r\n    }\r\n\r\n    console.log('posts changed')\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography>Create a post</Typography>\r\n                <TextField name='creator' value={postData.creator} onChange={e => setPostData({...postData, creator: e.target.value})} variant='outlined' label='creator' fullWidth/>\r\n                <TextField name='title' value={postData.title} onChange={e => setPostData({...postData, title: e.target.value})} variant='outlined' label='title' fullWidth/>\r\n                <TextField name='message' value={postData.message} onChange={e => setPostData({...postData, message: e.target.value})} variant='outlined' label='message' fullWidth/>\r\n                <TextField name='tags' value={postData.tags} onChange={e => setPostData({...postData, tags: e.target.value})} variant='outlined' label='tags' fullWidth/>\r\n                <div className={classes.fileInput}>\r\n                    <FileBase \r\n                        type='file'\r\n                        multiple={false}\r\n                        onDone={({base64}) => setPostData({...postData, selectedFile: base64})}\r\n                    />\r\n                </div>\r\n                <Button className={classes.buttonSubmit} variant='contained' color='primary' type='submit' size='large' fullWidth>submit</Button>\r\n                <Button variant='contained' color='secondary' onClick={clear} size='small' fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Form","E:\\Programming\\portf_app\\client\\src\\components\\Posts\\Posts.js",[],"E:\\Programming\\portf_app\\client\\src\\components\\Posts\\Post\\Post.js",[],"E:\\Programming\\portf_app\\client\\src\\styles.js",[],["77","78"],"E:\\Programming\\portf_app\\client\\src\\components\\Posts\\Post\\styles.js",[],"E:\\Programming\\portf_app\\client\\src\\components\\Posts\\styles.js",[],"E:\\Programming\\portf_app\\client\\src\\components\\Form\\styles.js",[],"E:\\Programming\\portf_app\\client\\src\\reducers\\index.js",[],"E:\\Programming\\portf_app\\client\\src\\reducers\\posts.js",["79"],"export default (posts=[], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_POSTS':\r\n            return action.payload\r\n        case 'CREATE_POST':\r\n            return [...posts, action.payload]\r\n        case 'UPDATE_POST':\r\n            const id = action.payload._id\r\n            const newPosts = posts.filter(post => post._id !== id)\r\n            return [...newPosts, action.payload]\r\n        case 'DELETE_POST':\r\n            return posts.filter(post => post._id !== action.payload)\r\n        case 'ADD_LIKE':\r\n            //known id of liked post\r\n            //const likedPost = posts.find(post => post._id === action.payload.id)\r\n            //const count = likedPost.like + 1\r\n            console.log('req comes')\r\n            //const posts_list = posts.map(post => post._id === String(action.payload.id) ? {like: action.payload.data} : post)\r\n            const posts_list = posts.map(post => post._id === action.payload.id ? {...post, like: action.payload.data} : post)\r\n            posts_list.forEach(post => console.log(post._id))\r\n            console.log(action.payload.id, action.payload.data, posts_list)\r\n            return posts_list\r\n        default:\r\n            return posts\r\n    }\r\n}","E:\\Programming\\portf_app\\client\\src\\actions\\posts.js",[],"E:\\Programming\\portf_app\\client\\src\\api\\index.js",[],"E:\\Programming\\portf_app\\client\\src\\components\\Navbar\\Navbar.js",[],"E:\\Programming\\portf_app\\client\\src\\components\\Navbar\\styles.js",[],"E:\\Programming\\portf_app\\client\\src\\components\\Home\\Home.js",[],"E:\\Programming\\portf_app\\client\\src\\components\\Auth\\Auth.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":31,"column":8,"nodeType":"86","endLine":31,"endColumn":19,"suggestions":"87"},{"ruleId":"80","replacedBy":"88"},{"ruleId":"82","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":1,"nodeType":"92","endLine":26,"endColumn":2},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'post'. Either include it or remove the dependency array.","ArrayExpression",["95"],["93"],["94"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [currentId, post]",{"range":"98","text":"99"},[935,946],"[currentId, post]"]